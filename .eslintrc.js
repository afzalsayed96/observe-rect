const restrictedGlobals = [
	"addEventListener",
	"blur",
	"close",
	"closed",
	"confirm",
	"defaultStatus",
	"defaultstatus",
	"event",
	"external",
	"find",
	"focus",
	"frameElement",
	"frames",
	"history",
	"innerHeight",
	"innerWidth",
	"length",
	"location",
	"locationbar",
	"menubar",
	"moveBy",
	"moveTo",
	"name",
	"onblur",
	"onerror",
	"onfocus",
	"onload",
	"onresize",
	"onunload",
	"open",
	"opener",
	"opera",
	"outerHeight",
	"outerWidth",
	"pageXOffset",
	"pageYOffset",
	"parent",
	"print",
	"removeEventListener",
	"resizeBy",
	"resizeTo",
	"screen",
	"screenLeft",
	"screenTop",
	"screenX",
	"screenY",
	"scroll",
	"scrollbars",
	"scrollBy",
	"scrollTo",
	"scrollX",
	"scrollY",
	"self",
	"status",
	"statusbar",
	"stop",
	"toolbar",
	"top",
];

module.exports = {
	extends: ["eslint:recommended"],
	root: true,
	// parser: "babel-eslint",
	plugins: ["import"],
	env: {
		browser: true,
		commonjs: true,
		es6: true,
		jest: true,
		node: true,
	},
	parserOptions: {
		ecmaVersion: 2018,
		sourceType: "module",
	},
	overrides: [
		{
			files: ["**/*.ts?(x)"],
			parser: "@typescript-eslint/parser",
			parserOptions: {
				ecmaVersion: 2018,
				sourceType: "module",

				// typescript-eslint specific options
				warnOnUnsupportedTypeScriptVersion: true,
			},
			plugins: ["@typescript-eslint"],
			// If adding a typescript-eslint version of an existing ESLint rule,
			// make sure to disable the ESLint rule here.
			rules: {
				// 'tsc' already handles this (https://github.com/typescript-eslint/typescript-eslint/issues/291)
				"no-dupe-class-members": 0,
				// 'tsc' already handles this (https://github.com/typescript-eslint/typescript-eslint/issues/477)
				"no-undef": 0,

				// Add TypeScript specific rules (and turn off ESLint equivalents)
				"@typescript-eslint/consistent-type-assertions": 1,
				"no-array-constructor": 0,
				"@typescript-eslint/no-array-constructor": 1,
				"no-use-before-define": 0,
				"@typescript-eslint/no-use-before-define": [
					1,
					{
						functions: false,
						classes: false,
						variables: false,
						typedefs: false,
					},
				],
				"no-unused-expressions": 0,
				"@typescript-eslint/no-unused-expressions": [
					2,
					{
						allowShortCircuit: true,
						allowTernary: true,
						allowTaggedTemplates: true,
					},
				],
				"no-unused-vars": 0,
				"@typescript-eslint/no-unused-vars": [
					1,
					{
						args: "none",
						ignoreRestSiblings: true,
					},
				],
				"no-useless-constructor": 0,
				"@typescript-eslint/no-useless-constructor": 1,
			},
		},
	],

	// NOTE: When adding rules here, you need to make sure they are compatible with
	// `typescript-eslint`, as some rules such as `no-array-constructor` aren't compatible.
	rules: {
		// http://eslint.org/docs/rules/
		"array-callback-return": 1,
		"default-case": 0,
		"dot-location": [1, "property"],
		eqeqeq: [1, "smart"],
		"new-parens": 1,
		"no-array-constructor": 0,
		"no-caller": 1,
		"no-cond-assign": [1, "except-parens"],
		"no-const-assign": 1,
		"no-control-regex": 1,
		"no-delete-var": 1,
		"no-dupe-args": 1,
		"no-dupe-class-members": 1,
		"no-dupe-keys": 1,
		"no-duplicate-case": 1,
		"no-empty-character-class": 1,
		"no-empty-pattern": 1,
		"no-eval": 1,
		"no-ex-assign": 1,
		"no-extend-native": 1,
		"no-extra-bind": 1,
		"no-extra-label": 1,
		"no-fallthrough": 1,
		"no-func-assign": 1,
		"no-implied-eval": 1,
		"no-invalid-regexp": 1,
		"no-iterator": 1,
		"no-label-var": 1,
		"no-labels": [1, { allowLoop: true, allowSwitch: false }],
		"no-lone-blocks": 1,
		"no-loop-func": 1,
		"no-mixed-operators": [
			1,
			{
				groups: [
					["&", "|", "^", "~", "<<", ">>", ">>>"],
					["==", "!=", "===", "!==", ">", ">=", "<", "<="],
					["&&", "||"],
					["in", "instanceof"],
				],
				allowSamePrecedence: false,
			},
		],
		"no-multi-str": 1,
		"no-native-reassign": 1,
		"no-negated-in-lhs": 1,
		"no-new-func": 1,
		"no-new-object": 1,
		"no-new-symbol": 1,
		"no-new-wrappers": 1,
		"no-obj-calls": 1,
		"no-octal": 1,
		"no-octal-escape": 1,
		"no-regex-spaces": 1,
		"no-restricted-syntax": [1, "WithStatement"],
		"no-script-url": 1,
		"no-self-assign": 1,
		"no-self-compare": 1,
		"no-sequences": 1,
		"no-shadow-restricted-names": 1,
		"no-sparse-arrays": 1,
		"no-template-curly-in-string": 1,
		"no-this-before-super": 1,
		"no-throw-literal": 1,
		"no-undef": 2,
		"no-restricted-globals": [2].concat(restrictedGlobals),
		"no-unreachable": 1,
		"no-unused-expressions": [
			2,
			{
				allowShortCircuit: true,
				allowTernary: true,
				allowTaggedTemplates: true,
			},
		],
		"no-unused-labels": 1,
		"no-unused-vars": [
			1,
			{
				args: "none",
				ignoreRestSiblings: true,
			},
		],
		"no-use-before-define": [
			1,
			{
				functions: false,
				classes: false,
				variables: false,
			},
		],
		"no-useless-computed-key": 1,
		"no-useless-concat": 1,
		"no-useless-constructor": 1,
		"no-useless-escape": 1,
		"no-useless-rename": [
			1,
			{
				ignoreDestructuring: false,
				ignoreImport: false,
				ignoreExport: false,
			},
		],
		"no-with": 1,
		"no-whitespace-before-property": 1,
		"require-yield": 1,
		"rest-spread-spacing": [1, "never"],
		strict: [1, "never"],
		"unicode-bom": [1, "never"],
		"use-isnan": 1,
		"valid-typeof": 1,
		"getter-return": 1,

		// // https://github.com/benmosher/eslint-plugin-import/tree/master/docs/rules
		"import/first": 2,
		"import/no-amd": 2,
		"import/no-anonymous-default-export": 1,
		"import/no-webpack-loader-syntax": 2,
	},
};
